@using Domain.Enums
@using ViewClient.Views.Shared

@model Domain.DTO.Room.RoomResponse

@{
    ViewData["Title"] = "Details";
}
@{
    var floorList = ViewBag.FloorList as List<Domain.Models.Floor>;
    var roomtypeList = ViewBag.RoomTypes as List<Domain.DTO.RoomType.RoomTypeResponse>;
}
<h4 style="margin-top:30px;">Đặt phòng của bạn</h4>

<div class="d-flex">
    <div class="img-column me-3">
        @if (Model.Images != null && Model.Images.Any())
        {
            @foreach (var img in Model.Images)
            {
                var extension = System.IO.Path.GetExtension(img);
                if (new[] { ".jpg", ".jpeg", ".png", ".gif" }.Contains(extension.ToLower()))
                {
                    var imagePath = Url.Content($"/View/wwwroot/images/{img}");

                    <div class="img-container-details">
                        <img src="@imagePath" alt="" />
                    </div>
                }
            }
        }
        else
        {
            <p>Không có hình ảnh</p>
        }
        <div class="amenities-column mt-3">
            <h5>Diện tích phòng: <span style="font-weight: normal;">@Html.DisplayFor(model => model.RoomSize) m²</span></h5>
            <h5>
                Tiện ích phòng của phòng:
                <span style="font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif; font-weight:bold;">@Html.DisplayFor(model => model.Name)</span>
            </h5>
            @if (Model.RoomType.AmenityRooms != null && Model.RoomType.AmenityRooms.Any())
            {
                <div class="row">
                    @foreach (var amenityRoom in Model.RoomType.AmenityRooms
                   .Where(amenityRoom => amenityRoom.Status == EntityStatus.Active))
                    {
                        <div class="col-4 mb-2">
                            <div class="amenity-item">
                                <strong>@amenityRoom.Amenity.Name</strong>
                                <span style="font-weight: normal;">: @amenityRoom.Amount</span>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <p>Phòng này hiện không có tiện ích nào được liên kết.</p>
            }
        </div>
    </div>

    <div class="info-column flex-grow-1">
        <dl>
            <div class="info-row">
                <dt>@Html.DisplayName("Tên phòng")</dt>
                <dd>@Html.DisplayFor(model => model.Name)</dd>
            </div>
            <div class="info-row">
                <dt>@Html.DisplayName("Giá phòng(VNĐ/đêm)")</dt>
                <dd>@Html.DisplayFor(model => model.Price)</dd>
            </div>
            <div class="info-row">
                <dt>@Html.DisplayName("Địa chỉ của khách sạn/phòng")</dt>
                <dd>@Html.DisplayFor(model => model.Address)</dd>
            </div>
            <div class="info-row">
                <dt>@Html.DisplayName("Mô tả chi tiết phòng")</dt>
                <dd>@Html.DisplayFor(model => model.Description)</dd>
            </div>
            <div class="info-row">
                <dt>@Html.DisplayName("Diện tích phòng")</dt>
                <dd>@Html.DisplayFor(model => model.RoomSize) m²</dd>
            </div>
            <div class="info-row">
                <dt>@Html.DisplayName("Tầng của phòng")</dt>
                <dd>@floorList?.FirstOrDefault(f => f.Id == Model.FloorId)?.Name</dd>
            </div>
            <div class="info-row">
                <dt>@Html.DisplayName("Loại phòng")</dt>
                <dd>@roomtypeList?.FirstOrDefault(rt => rt.Id == Model.RoomTypeId)?.Name</dd>
            </div>
        </dl>
    </div>
</div>

<div>
    <a asp-action="Index" asp-controller="Room" class="btn btn-outline-secondary">Quay lại</a>
</div>

<style>
    h4 {
        color: #0056b3;
        margin-bottom: 20px;
        text-align: center;
    }

    hr {
        border: 1px solid #0056b3;
        margin: 20px 0;
    }

    .d-flex {
        display: flex;
        align-items: flex-start; /* Căn chỉnh các phần tử theo chiều dọc */
    }

    .img-column {
        flex: 1; /* Chiếm không gian còn lại */
        margin-right: 20px; /* Khoảng cách giữa hình ảnh và thông tin */
    }

    dt {
        font-weight: bold;
        color: #0056b3;
        margin-bottom: 5px;
    }

    dd {
        margin-bottom: 20px;
        padding-left: 10px;
        border-left: 3px solid #0056b3;
        transition: background-color 0.3s ease; /* Hiệu ứng chuyển màu nền */
    }

        div.info-row:hover {
            background-color: #e7f1ff; /* Màu nền khi hover */
        transform: scaleY(0.85);
        }

    .img-container-details {
        width: 100%; /* Chiếm toàn bộ chiều rộng */
        height: 350px; /* Chiều cao cố định cho hình ảnh */
        overflow: hidden;
        margin: 5px 0; /* Khoảng cách giữa các hình ảnh */
    }

    img {
        object-fit: cover;
        width: 100%;
        height: 100%;
        border-radius: 5px;
    }

    .btn {
        display: inline-block;
        margin-top: 20px;
        padding: 10px 20px;
        font-size: 16px;
        background-color: #0056b3;
        color: white;
        border: none;
        border-radius: 5px;
        text-decoration: none;
        transition: background-color 0.3s ease;
    }

        .btn:hover {
            background-color: #004494;
        }

    .amenities-column {
        margin-top: 20px; /* Khoảng cách giữa ảnh và tiện ích */
    }

    .amenity-item {
        padding: 5px;
        border: 1px solid #0056b3; /* Đường viền cho tiện ích */
        border-radius: 5px; /* Bo góc */
        background-color: #f8f9fa; /* Màu nền nhẹ */
        transition: background-color 0.3s ease; /* Hiệu ứng chuyển màu nền */
    }

        .amenity-item:hover {
            background-color: #e7f1ff; /* Màu nền khi hover */
            transform: scale(1.1);
        }

        .amenity-item strong {
            color: #0056b3; /* Màu chữ cho tên tiện ích */
        }
</style>