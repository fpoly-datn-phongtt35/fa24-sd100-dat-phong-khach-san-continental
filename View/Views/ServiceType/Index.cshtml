@using Domain.DTO.Paging
@using View.Views.Shared.Helper
@model ResponseData<Domain.Models.ServiceType>

@{
    ViewData["Title"] = "Index";
    Layout = "_AdminLayout";
}

<form method="get" action="@Url.Action("Index", new { pageIndex = Model.CurrentPage, pageSize = Model.PageSize })">
    <div class="input-group mb-3 w-100">
        <input type="text" id="name" name="name" class="form-control me-2" placeholder="Name" value="@Context.Request.Query["name"]" style="max-width: 200px;" />
        <button class="btn btn-secondary ms-2" type="submit">Lọc</button>
        <button type="submit" class="btn btn-danger ms-2" onclick="clearFilters()">Xóa bộ lọc</button>
    </div>
</form>

<script>
    function clearFilters() {
        document.getElementById('name').value = ''
    }
</script>

<style>
    body {
        color: white;
    }

    .table th, .table td {
        color: white;
    }

    h1 {
        color: white;
    }
</style>

<h1>List of Services</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.data.First().Name)</th>
            <th>@Html.DisplayNameFor(model => model.data.First().Description)</th>
            <th>@Html.DisplayNameFor(model => model.data.First().Status)</th>         
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.data)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.Description)</td>
                <td>
                    @StatusHelper.DisplayStatusBadge(item.Status)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-warning" }) 
                    @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-info" }) 
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-danger" })
                </td>
            </tr>
        }
    </tbody>
</table>

<div>
    <nav>
        <ul class="pagination">
            @for (var i = 1; i <= Model.totalPage; i++)
            {
                <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new {
                        pageIndex = i,
                        pageSize = Model.PageSize,
                        name = Context.Request.Query["name"].ToString()
                    })">@i</a>
                </li>
            }
        </ul>
    </nav>
</div>