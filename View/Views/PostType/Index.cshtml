@using Domain.DTO.Paging
@model ResponseData<Domain.Models.PostType>

@{
    ViewData["Title"] = "Index";
}
<style>
    body {
        color: white;
    }

    .table th, .table td {
        color: white;
    }

    h1 {
        color: white;
    }
</style>

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>


<form method="get" action="@Url.Action("Index", new { pageIndex = Model.CurrentPage, pageSize = Model.PageSize })">
    <div class="input-group mb-3 w-100">
        <input type="text" id="titleOfType" name="titleOfType" class="form-control me-2" placeholder="Title Of Type" value="@Context.Request.Query["titleOfType"]" style="max-width: 200px;" />
        <button class="btn btn-secondary ms-2" type="submit">Lọc</button>
        <button type="submit" class="btn btn-danger ms-2" onclick="clearFilters()">Xóa bộ lọc</button>
    </div>
</form>

<script>
    function clearFilters() {
        document.getElementById('titleOfType').value = '';
    }
</script>

<table class="table">
    <thead>
        <tr>
            <th> @Html.DisplayNameFor(model => model.data.First().Id)</th>
            <th> @Html.DisplayNameFor(model => model.data.First().TitleOfType)</th>
            <th> @Html.DisplayNameFor(model => model.data.First().Content)</th>
            <th> @Html.DisplayNameFor(model => model.data.First().Status)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.data) {
        <tr>
            <td> @Html.DisplayFor(modelItem => item.Id)</td>
            <td> @Html.DisplayFor(modelItem => item.TitleOfType)</td>
            <td> @Html.DisplayFor(modelItem => item.Content)</td>
            <td> @Html.DisplayFor(modelItem => item.Status)</td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
}
    </tbody>
</table>
<div class="d-flex justify-content-center">
    <nav>
        <ul class="pagination">
            @for (var i = 1; i <= Model.totalPage; i++)
            {
                <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { 
                        pageIndex = i, 
                        pageSize = Model.PageSize,
                        titleOfType = Context.Request.Query["titleOfType"].ToString()})">@i</a>
                </li>
            }
        </ul>
    </nav>
</div>