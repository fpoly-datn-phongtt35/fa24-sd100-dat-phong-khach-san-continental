@using System.Diagnostics
@using Domain.DTO.Floor
@using Domain.DTO.RoomType
@using Domain.Enums
@using Domain.DTO.Paging
@using View.Views.Shared.Helper
@model ResponseData<Domain.DTO.Room.RoomResponse>


@{
    ViewData["Title"] = "Danh sách Room";
}

<h3>Danh sách Phòng</h3>



<form method="get" action="@Url.Action("Index", new { pageIndex = Model.CurrentPage, pageSize = Model.PageSize })" class="d-flex align-items-center">
        <div class="form-group me-2">
            <input type="text" name="name" class="form-control" placeholder="Tìm kiếm"
                   value="@ViewContext.HttpContext.Request.Query["search"]" />
        </div>
        <div class="form-group me-2">
            <select name="roomTypeId" class="form-select" id="roomTypeId">
                <option value="">Chọn loại phòng</option>
                @foreach (var roomType in ViewBag.RoomTypes)
                {
                    <option value="@roomType.Id" selected="@(Context.Request.Query["roomTypeId"] == roomType.Id.ToString())">
                        @roomType.Name
                    </option>
                }
            </select>
        </div>

        <div class="form-group me-2">
            <select name="floorId" class="form-select" id="floorId">
                <option value="">Chọn tầng</option>
                @foreach (var floor in ViewBag.FloorList)
                {
                    <option value="@floor.Id" selected="@(Context.Request.Query["floorId"] == floor.Id.ToString())">
                        @floor.Name
                    </option>
                }
            </select>
        </div>

        <div>
            <select name="status" class="form-select" id="status">
                <option hidden>-- Chọn trạng thái --</option>
                @foreach (var status in Enum.GetValues(typeof(RoomStatus)))
                {
                var statusEnum = (RoomStatus)status;
                <option value="@((int)statusEnum)" selected="@(Context.Request.Query["status"].ToString() == ((int)status).ToString())">
                    @StatusHelper.DisplayNameRoomStatus(statusEnum)
                </option>
                }
            </select>
        </div>
    <button type="submit" class="btn btn-outline-success">Lọc</button>
        <a href="@Url.Action("Index")" class="btn btn-secondary ms-2">Xóa lọc</a>
    </form>
<p>
    <a asp-action="Create" class="btn btn-primary">Tạo mới</a>
</p>
<table class="table table-striped" style="color: black">
    <thead>
        <tr>
            <th>Phòng</th>
            <th>Giá tiền</th>
            @* <th>Địa chỉ</th> *@
            @* <th>Mô tả</th> *@
            <th>@Html.DisplayName("Room Size")</th>
            <th>Ảnh</th>
            <th>Tầng</th>
            <th>Loại phòng</th>
            <th>Trạng thái</th>
            <th>Chức năng</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.data)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                <td>@String.Format("{0:N0}", item.Price) VND</td>
                @* <td>@Html.DisplayFor(modelItem => item.Address)</td> *@
                @* <td>@Html.DisplayFor(modelItem => item.Description)</td> *@
                <td>@Html.DisplayFor(modelItem => item.RoomSize)</td>
                <td>
                    <div class="d-flex justify-content-center">
                        @if (item.Images != null && item.Images.Count > 0)
                        {
                            var firstImage = item.Images.FirstOrDefault();
                            var extension = System.IO.Path.GetExtension(firstImage);
                            if (new[] { ".jpg", ".jpeg", ".png", ".gif" }.Contains(extension.ToLower()))
                            {
                                <div class="img-container d-flex justify-content-start" style="width: 100px; height: 100px; margin: 5px;">
                                    <img class="responsive-img" src="~/images/@firstImage" alt="@item.Name" style="object-fit: cover; width: 100%; height: 100%;">
                                </div>
                            }
                        }
                    </div>
                </td>
                <td>
                    @{
                        var floorList = ViewBag.FloorList as List<Domain.Models.Floor>;
                        var floor = floorList?.FirstOrDefault(s => s.Id == item.FloorId);
                    }
                    @floor?.Name
                </td>
                <td>
                    @{
                        var roomtype = ViewBag.RoomTypes as List<Domain.DTO.RoomType.RoomTypeResponse>;
                        var roomtype1 = roomtype?.FirstOrDefault(s => s.Id == item.RoomTypeId);
                    }
                    @roomtype1?.Name
                </td>
                <td>@StatusHelper.DisplayRoomStatusBadge(item.Status)</td>
                
                <td>
                    <div class="dropdown">
                        <button class="button1" type="button" id="dropdownMenuButton-@item.Id"
                                data-bs-toggle="dropdown" aria-expanded="false">
                            <img src="@Url.Content("~/images/icons/menu.png")">
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton-@item.Id">
                            @Html.ActionLink("Chỉnh sửa", "Edit", new { roomId = item.Id }, new { @class = "dropdown-item" })
                            @Html.ActionLink("Chi tiết", "Details", new { roomId = item.Id }, new { @class = "dropdown-item" })
                            @Html.ActionLink("Delete", "Delete", new { roomId = item.Id }, new { @class = "dropdown-item text-danger" })
                        </ul>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>
<div>
    <nav>
        <ul class="pagination">
            @for (var i = 1; i <= Model.totalPage; i++)
            {
                <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new {
                        pageIndex = i,
                        pageSize = Model.PageSize,
                        search = Context.Request.Query["search"].ToString(),
                        roomTypeId = Context.Request.Query["roomTypeId"].ToString(),
                        floorId = Context.Request.Query["floorId"].ToString(),
                        status = Context.Request.Query["status"].ToString()
                    })">@i</a>
                </li>
            }
        </ul>
    </nav>
</div>
