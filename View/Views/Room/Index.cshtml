@using System.Diagnostics
@using Domain.DTO.Floor
@using Domain.DTO.RoomType
@using Domain.Enums
@using Domain.DTO.Paging
@model ResponseData<Domain.DTO.Room.RoomResponse>


@{
    ViewData["Title"] = "Danh sách Room";
}
<style>
    body {
        color: white;
    }

    .table th, .table td {
        color: white;
    }

</style>
<h1>Danh sách Room</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Tạo mới</a>
</p>

<form method="get" action="@Url.Action("Index", new { pageIndex = Model.CurrentPage, pageSize = Model.PageSize })" class="d-flex align-items-center">
        <div class="form-group me-2">
            <input type="text" name="name" class="form-control" placeholder="Tìm kiếm"
                   value="@ViewContext.HttpContext.Request.Query["search"]" />
        </div>
        <div class="form-group me-2">
            <select name="roomTypeId" class="form-select" id="roomTypeId">
                <option value="">Chọn loại phòng</option>
                @foreach (var roomType in ViewBag.RoomTypes)
                {
                    <option value="@roomType.Id" selected="@(Context.Request.Query["roomTypeId"] == roomType.Id.ToString())">
                        @roomType.Name
                    </option>
                }
            </select>
        </div>

        <div class="form-group me-2">
            <select name="floorId" class="form-select" id="floorId">
                <option value="">Chọn tầng</option>
                @foreach (var floor in ViewBag.FloorList)
                {
                    <option value="@floor.Id" selected="@(Context.Request.Query["floorId"] == floor.Id.ToString())">
                        @floor.Name
                    </option>
                }
            </select>
        </div>

        <div>
            <select name="status" id="status" class="form-select me-2" style="max-width: 200px;">
                <option value="">-- Status --</option>
                @foreach (var status in ViewBag.StatusList)
                {
                    <option value="@((int)status)"
                            selected="@(Context.Request.Query["status"].ToString() == ((int)status).ToString())">
                        @status
                    </option>
                }
            </select>
        </div>
        <button type="submit" class="btn btn-light">Tìm kiếm</button>
        <a href="@Url.Action("Index")" class="btn btn-secondary ms-2">Xóa lọc</a>
    </form>

<table class="table table-striped" style="color: whitesmoke">
    <thead>
        <tr>
            <th>@Html.DisplayName("Name")</th>
            <th>@Html.DisplayName("Price")</th>
            <th>@Html.DisplayName("Address")</th>
            <th>@Html.DisplayName("Description")</th>
            <th>@Html.DisplayName("Room Size")</th>
            <th>@Html.DisplayName("Images")</th>
            <th>@Html.DisplayName("Floor")</th>
            <th>@Html.DisplayName("Room Type")</th>
            <th>@Html.DisplayName("Status")</th>
            <th>@Html.DisplayName("Options")</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.data)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.Price)</td>
                <td>@Html.DisplayFor(modelItem => item.Address)</td>
                <td>@Html.DisplayFor(modelItem => item.Description)</td>
                <td>@Html.DisplayFor(modelItem => item.RoomSize)</td>
                <td>
                    <div class="d-flex justify-content-center">
                        @if (item.Images != null && item.Images.Count > 0)
                        {
                            var firstImage = item.Images.FirstOrDefault();
                            var extension = System.IO.Path.GetExtension(firstImage);
                            if (new[] { ".jpg", ".jpeg", ".png", ".gif" }.Contains(extension.ToLower()))
                            {
                                <div class="img-container d-flex justify-content-start" style="width: 100px; height: 100px; margin: 5px;">
                                    <img class="responsive-img" src="~/images/@firstImage" alt="@item.Name" style="object-fit: cover; width: 100%; height: 100%;">
                                </div>
                            }
                        }
                    </div>
                </td>
                <td>
                    @{
                        var floorList = ViewBag.FloorList as List<Domain.Models.Floor>;
                        var floor = floorList?.FirstOrDefault(s => s.Id == item.FloorId);
                    }
                    @floor?.Name
                </td>
                <td>
                    @{
                        var roomtype = ViewBag.RoomTypes as List<Domain.DTO.RoomType.RoomTypeResponse>;
                        var roomtype1 = roomtype?.FirstOrDefault(s => s.Id == item.RoomTypeId);
                    }
                    @roomtype1?.Name
                </td>
                <td>@Html.DisplayFor(modelItem => item.Status)</td>
                <td>
                    @Html.ActionLink("Chỉnh sửa", "Edit", new { roomId = item.Id }, new { @class = "btn btn-warning" })
                    @Html.ActionLink("Chi tiết", "Details", new { roomId = item.Id }, new { @class = "btn btn-info" })
                    @Html.ActionLink("Delete", "Delete", new { roomId = item.Id }, new { @class = "btn btn-danger" })
                </td>
            </tr>
        }
    </tbody>
</table>
<div>
    <nav>
        <ul class="pagination">
            @for (var i = 1; i <= Model.totalPage; i++)
            {
                <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new {
                        pageIndex = i,
                        pageSize = Model.PageSize,
                        search = Context.Request.Query["search"].ToString(),
                        roomTypeId = Context.Request.Query["roomTypeId"].ToString(),
                        floorId = Context.Request.Query["floorId"].ToString(),
                        status = Context.Request.Query["status"].ToString()
                    })">@i</a>
                </li>
            }
        </ul>
    </nav>
</div>
