@using Domain.DTO.Paging
@using Domain.Models
@using View.Views.Shared.Helper
@model ResponseData<Domain.Models.VoucherDetail>

@{
    ViewData["Title"] = "Index";
    Layout = "_AdminLayout";
}

<h1>Voucher detail</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
@if (Model != null && Model.data != null && Model.data.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.data.First().RoomBookingId)</th>
                <th>Voucher name</th>
                <th>@Html.DisplayNameFor(model => model.data.First().Code)</th>
                <th>@Html.DisplayNameFor(model => model.data.First().StartDate)</th>
                <th>@Html.DisplayNameFor(model => model.data.First().EndDate)</th>
                <th>@Html.DisplayNameFor(model => model.data.First().Status)</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.data)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.RoomBookingId)</td>
                    <td>
                        @{
                            var voucherList = ViewBag.VoucherList as List<Voucher>;
                            var voucher = voucherList?.FirstOrDefault(s => s.Id == item.VoucherId);
                        }
                        @voucher.Name
                    </td>
                    <td>@Html.DisplayFor(modelItem => item.Code)</td>
                    <td>@Html.DisplayFor(modelItem => item.StartDate)</td>
                    <td>@Html.DisplayFor(modelItem => item.EndDate)</td>
                    <td>
                        @StatusHelper.DisplayStatusBadge(item.Status)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-warning" }) 
                        @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-info" }) 
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-danger" })
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No data available.</p>
}

<div>
    <nav>
        <ul class="pagination">
            @for (var i = 1; i <= Model.totalPage; i++)
            {
                <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new {
                        pageIndex = i,
                        pageSize = Model.PageSize,
                        roomBookingId = Context.Request.Query["roomBookingId"].ToString(),
                        voucherId = Context.Request.Query["voucherId"].ToString()
                    })">@i</a>
                </li>
            }
        </ul>
    </nav>
</div>

