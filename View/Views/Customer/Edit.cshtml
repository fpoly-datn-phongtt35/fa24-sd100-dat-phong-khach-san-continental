@using Domain.Enums
@using View.Views.Shared.Helper
@model Domain.Models.Customer;

@{
    ViewData["Title"] = "Edit Customer";
}

<h3 class="text-center">Sửa thông tin khách hàng</h3>
<hr />
@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="fas fa-exclamation-circle"></i> <strong>Lỗi:</strong>
        <ul>
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

<div class="row">
    <div class="col-md-8 offset-md-2">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="UserName" class="control-label"><i class="fas fa-user"></i> Tên người dùng</label>
                <input asp-for="UserName" class="form-control" required placeholder="Nhập tên người dùng" />
                <span asp-validation-for="UserName" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="FirstName" class="control-label"><i class="fas fa-user-circle"></i> Họ</label>
                <input asp-for="FirstName" class="form-control" required placeholder="Nhập họ" />
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="LastName" class="control-label"><i class="fas fa-user-circle"></i> Tên</label>
                <input asp-for="LastName" class="form-control" required placeholder="Nhập tên" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Email" class="control-label"><i class="fas fa-envelope"></i> Email</label>
                <input asp-for="Email" class="form-control" required placeholder="Nhập email" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="PhoneNumber" class="control-label"><i class="fas fa-phone"></i> Số điện thoại</label>
                <input asp-for="PhoneNumber" class="form-control" required placeholder="Nhập số điện thoại" />
                <span asp-validation-for="PhoneNumber" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Gender" class="control-label"><i class="fas fa-venus-mars"></i> Giới tính</label>
                <select asp-for="Gender" class="form-control">
                    <option value="">-Chọn giới tính-</option>
                    <option value="1">Nam</option>
                    <option value="2">Nữ</option>
                    <option value="0">Không trả lời</option>
                </select>
                <span asp-validation-for="Gender" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="DateOfBirth" class="control-label"><i class="fas fa-calendar-alt"></i> Ngày sinh</label>
                <input asp-for="DateOfBirth" class="form-control" />
                <span asp-validation-for="DateOfBirth" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Status">Trạng thái</label>
                <select name="status" class="form-select" id="status">
                    <option disabled>-- Chọn trạng thái --</option>
                    @foreach (var status in Enum.GetValues(typeof(EntityStatus)))
                    {
                        var statusEnum = (EntityStatus)status;
                        <option value="@((int)statusEnum)" selected="@(Context.Request.Query["status"].ToString() == ((int)status).ToString())">
                            @StatusHelper.DisplayNameEntityStatus(statusEnum)
                        </option>
                    }
                </select>
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>

            <div class="form-group text-center">
                <input type="submit" value="Lưu" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div class="text-center mt-3">
    <a asp-action="Index" class="btn btn-info">Quay lại</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            $("form").on("submit", function (event) {
                event.preventDefault(); // Prevent the default form submission
                const formData = $(this).serialize();

                $.ajax({
                    url: "/Customer/Edit", // Replace with your action URL
                    method: "POST",
                    data: formData,
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                title: "Thành công!",
                                text: response.message,
                                icon: "success",
                                confirmButtonText: "OK"
                            }).then(() => {
                                window.location.href = "/Customer/Index"; // Redirect after success
                            });
                        } else {
                            Swal.fire({
                                title: "Lỗi",
                                text: response.message,
                                icon: "error",
                                confirmButtonText: "Đóng"
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        Swal.fire({
                            title: "Lỗi",
                            text: "Đã xảy ra lỗi không mong muốn.",
                            icon: "error",
                            confirmButtonText: "Đóng"
                        });
                    }
                });
            });
        });
    </script>
}

<!-- Font Awesome for icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />

<style>
    /* Custom styles */
    .alert-danger {
        background-color: #f8d7da;
        border-color: #f5c6cb;
        color: #721c24;
        padding: 15px;
        border-radius: 8px;
        position: relative;
    }

        .alert-danger i {
            margin-right: 10px;
        }

    .alert-dismissible .close {
        color: #721c24;
        font-size: 1.5rem;
        opacity: 0.8;
    }

        .alert-dismissible .close:hover {
            opacity: 1;
        }

    .alert ul {
        list-style-type: none;
        margin: 0;
        padding-left: 20px;
    }

        .alert ul li {
            margin-bottom: 5px;
        }

    h3 {
        color: #007bff;
        margin-bottom: 20px;
    }

    .form-group {
        margin-bottom: 15px;
    }

    .form-control {
        border-radius: 0.25rem;
    }

    .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
    }

    .btn-info {
        background-color: #17a2b8;
        border-color: #17a2b8;
    }
</style>