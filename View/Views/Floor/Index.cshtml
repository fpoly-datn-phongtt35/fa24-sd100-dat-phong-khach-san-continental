@using Domain.DTO.Paging
@model ResponseData<Domain.Models.Floor>

@{
    ViewData["Title"] = "Index";
}

<style>
    body {
        color: white;
    }

    .table th, .table td {
        color: white;
    }

    h1 {
        color: white;
    }
</style>

<h1>List of Floor</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.data.First().Name)</th>
            <th>@Html.DisplayNameFor(model => model.data.First().NumberOfRoom)</th>
            <th>@Html.DisplayNameFor(model => model.data.First().Status)</th>
            <th>Building Name</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.data)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.NumberOfRoom)</td>
                <td>@Html.DisplayFor(modelItem => item.Status)</td>
                <td>
                    @{
                        var serviceTypeList = ViewBag.BuildingList as List<Domain.Models.Building>;
                        var serviceType = serviceTypeList?.FirstOrDefault(s => s.Id == item.BuildingId);
                    }
                    @serviceType.Name
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }
    </tbody>
</table>

<div>
    <nav>
        <ul class="pagination">
            @for (var i = 1; i <= Model.totalPage; i++)
            {
                <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { pageIndex = i, pageSize = Model.PageSize })">@i</a>
                </li>
            }
        </ul>
    </nav>
</div>
