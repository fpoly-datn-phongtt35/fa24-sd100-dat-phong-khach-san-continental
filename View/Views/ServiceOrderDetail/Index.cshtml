@using Domain.DTO.Paging
@model ResponseData<Domain.Models.ServiceOrderDetail>

@{
    ViewData["Title"] = "Index";
}

<style>
    body {
        color: white;
    }

    .table th, .table td {
        color: white;
    }

    h1 {
        color: white;
    }
</style>

<h1>ServiceOrderDetails</h1>

@if (Model != null && Model.data != null && Model.data.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.data.First().ServiceOrderId)</th>
                <th>Service name</th>
                <th>@Html.DisplayNameFor(model => model.data.First().Amount)</th>
                <th>@Html.DisplayNameFor(model => model.data.First().Price)</th>
                <th>@Html.DisplayNameFor(model => model.data.First().CreatedTime)</th>
                <th>@Html.DisplayNameFor(model => model.data.First().Status)</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.data)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.ServiceOrderId)</td>
                    <td>
                        @{
                            var serviceList = ViewBag.ServiceList as List<Domain.Models.Service>;
                            var service = serviceList?.FirstOrDefault(s => s.Id == item.ServiceId);
                        }                       
                        @service.Name
                    </td>
                    <td>@Html.DisplayFor(modelItem => item.Amount)</td>
                    <td>@Html.DisplayFor(modelItem => item.Price)</td>
                    <td>@Html.DisplayFor(modelItem => item.CreatedTime)</td>
                    <td>@Html.DisplayFor(modelItem => item.Status)</td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No data available.</p>
}

<div>
    <nav>
        <ul class="pagination">
            @for (var i = 1; i <= Model.totalPage; i++)
            {
                <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new {
                        pageIndex = i,
                        pageSize = Model.PageSize,
                        serviceOrderId = Context.Request.Query["serviceOrderId"].ToString()
                    })">@i</a>
                </li>
            }
        </ul>
    </nav>
</div>
