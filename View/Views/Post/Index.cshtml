@using Domain.DTO.Paging
@using Domain.Models
@using View.Views.Shared.Helper
@model ResponseData<Domain.Models.Post>

@{
    ViewData["Title"] = "Index";
    var postTypeList = ViewBag.postTypeList as List<PostType>;
    var staffList = ViewBag.StaffList as List<Domain.Models.Staff>;
}

<h3>Trang chủ bài đăng</h3>

<form method="get" action="@Url.Action("Index", new { pageIndex = Model.CurrentPage, pageSize = Model.PageSize })">
    <div class="input-group mb-3 w-100">
        <input type="text" id="title" name="title" class="form-control me-2" placeholder="Title" value="@Context.Request.Query["title"]" style="max-width: 200px;" />
        <input type="text" id="contentOfPost" name="contentOfPost" class="form-control me-2" placeholder="Content" value="@Context.Request.Query["contentOfPost"]" style="max-width: 200px;" />
        <button class="btn btn-secondary ms-2" type="submit">Lọc</button>
        <button type="submit" class="btn btn-danger ms-2" onclick="clearFilters()">Xóa bộ lọc</button>
    </div>
</form>

<script>
    function clearFilters() {
        document.getElementById('title').value = '';
        document.getElementById('contentOfPost').value = '';
    }
</script>

<p>
    <a asp-action="Create" class="btn btn-outline-primary">Tạo mới</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
               Loại bài đăng
            </th>
            <th>
               Nhân viên
            </th>
            <th>
               Tiêu đề
            </th>
            <th>
               Nội dung
            </th>
            <th>
                Trạng thái
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.data) {
        <tr>
                <td>
                    @{
                        var postType = postTypeList.FirstOrDefault(pt => pt.Id == item.PostTypeId);
                        var postTypeName = postType != null ? postType.TitleOfType : "Unknown";
                        @Html.DisplayFor(modelItem => postTypeName)
                    }
                </td>
                <td>
                    @{
                        var staff = staffList.FirstOrDefault(s => s.Id == item.StaffId);
                        var staffName = staff != null ? staff.FirstName + " " + staff.LastName : "Unknown";
                        @Html.DisplayFor(modelItem => staffName)
                    }
                </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Content)
            </td>
            <td>
                @StatusHelper.DisplayStatusBadge(item.Status)
            </td>
            <td>
                    @Html.ActionLink("Chỉnh sửa", "Edit", new { id = item.Id },
                             new { @class = "btn btn-warning" })
                    @Html.ActionLink("Chi tiết", "Details", new { id = item.Id },
                             new { @class = "btn btn-info" })
                    @Html.ActionLink("Xóa", "Delete", new { id = item.Id },
                             new { @class = "btn btn-danger" })
            </td>
        </tr>
}
    </tbody>
</table>

<div class="d-flex justify-content-center">
    <nav>
        <ul class="pagination">
            @for (var i = 1; i <= Model.totalPage; i++)
            {
                <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { 
                        pageIndex = i, 
                        pageSize = Model.PageSize,
                        title = Context.Request.Query["title"].ToString(),
                        contentOfPost = Context.Request.Query["contentOfPost"].ToString()})">@i</a>
                </li>
            }
        </ul>
    </nav>
</div>