@using Domain.DTO.Paging
@using View.Views.Shared.Helper
@model ResponseData<Domain.Models.Service>

@{
    ViewData["Title"] = "Index";
}
<h1>Danh sách dịch vụ</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Tạo mới</a>
</p>

<form method="get" action="@Url.Action("Index", new { pageIndex = Model.CurrentPage, pageSize = Model.PageSize })">
    <div class="input-group mb-3 w-100">
        <input type="text" id="serviceName" name="serviceName" class="form-control me-2" placeholder="Tên dịch vụ" value="@Context.Request.Query["serviceName"]" style="max-width: 200px;" />

        <select name="serviceTypeId" id="serviceTypeId" class="form-select me-2" style="max-width: 200px;">
            <option value="">-- Loại dịch vụ --</option>
            @foreach (var serviceType in ViewBag.ServiceTypeList)
            {
                <option value="@serviceType.Id"
                        selected="@(serviceType.Id.ToString() == Context.Request.Query["serviceTypeId"])">
                    @serviceType.Name
                </option>
            }
        </select>


        <select name="status" id="status" class="form-select me-2" style="max-width: 200px;">
            <option value="">-- Trạng thái --</option>
            @foreach (var status in ViewBag.StatusList)
            {
                <option value="@((int)status)"
                        selected="@(Context.Request.Query["status"].ToString() == ((int)status).ToString())">
                    @StatusHelper.DisplayStatusBadge(status)
                </option>
            }
        </select>

        <input type="number" name="minPrice" id="minPrice" class="form-control" value="@Context.Request.Query["minPrice"]" placeholder="Từ giá" style="max-width: 100px;" />
        <input type="number" name="maxPrice" id="maxPrice" class="form-control" value="@Context.Request.Query["maxPrice"]" placeholder="Đến giá" style="max-width: 100px;" />

        <button class="btn btn-secondary ms-2" type="submit">Lọc</button>
        <button type="submit" class="btn btn-danger ms-2" onclick="clearFilters()">Xóa bộ lọc</button>
    </div>
</form>

<script>
    function clearFilters() {
        document.getElementById('serviceName').value = '';
        document.getElementById('serviceTypeId').selectedIndex = 0; 
        document.getElementById('status').selectedIndex = 0; 
        document.getElementById('minPrice').value = '';
        document.getElementById('maxPrice').value = '';
    }
</script>


<table class="table">
    <thead>
        <tr>
            <th>Tên dịch vụ</th>
            <th>Loại dịch vụ</th>
            <th>Mô tả</th>
            <th>Giá tiền</th>
            <th>Đơn vị</th>
            <th>Hình ảnh</th>
            <th>Trạng thái</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.data)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                <td>
                    @{
                        var serviceTypeList = ViewBag.ServiceTypeList as List<Domain.Models.ServiceType>;
                        var serviceType = serviceTypeList?.FirstOrDefault(s => s.Id == item.ServiceTypeId);
                    }
                    @serviceType.Name
                </td>
                <td>@Html.DisplayFor(modelItem => item.Description)</td>
                <td>@Html.DisplayFor(modelItem => item.Price)</td>
                <td>@Html.DisplayFor(modelItem => item.Unit)</td>
                <td>
                    <div class="d-flex justify-content-start">
                        @if (!string.IsNullOrEmpty(item.Image))
                        {
                            var extension = System.IO.Path.GetExtension(item.Image);
                            if (new[] { ".jpg", ".jpeg", ".png", ".gif" }.Contains(extension.ToLower()))
                            {
                                <div class="img-container d-flex justify-content-center" style="width: 100px; height: 100px; margin: 5px;">
                                    <img class="responsive-img" src="~/images/service/@item.Image" alt="@item.Name" style="object-fit: cover; width: 100%; height: 100%;">
                                </div>
                            }
                            else
                            {
                                <span>Invalid Image Format</span>
                            }
                        }
                        else
                        {
                            <span>No Image</span>
                        }
                    </div>
                </td>
                <td>                
                    @if (item.Status != null)
                    {
                        @StatusHelper.DisplayStatusBadge(item.Status)
                    }else{
                        @: "No data"
                    }
                </td>
                <td>
                    @Html.ActionLink("Chỉnh sửa", "Edit", new { id = item.Id }, new { @class = "btn btn-warning" }) 
                    @Html.ActionLink("Chi tiết", "Details", new { id = item.Id }, new { @class = "btn btn-info" }) 
                    @Html.ActionLink("Xóa", "Delete", new { id = item.Id }, new { @class = "btn btn-danger" })
                </td>
            </tr>
        }
    </tbody>
</table>

<div>
    <nav>
        <ul class="pagination">
            @for (var i = 1; i <= Model.totalPage; i++)
            {
                <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new {
                        pageIndex = i,
                        pageSize = Model.PageSize,
                        serviceName = Context.Request.Query["serviceName"].ToString(),
                        serviceTypeId = Context.Request.Query["serviceTypeId"].ToString(),
                        status = Context.Request.Query["status"].ToString(),
                        minPrice = Context.Request.Query["minPrice"].ToString(),
                        maxPrice = Context.Request.Query["maxPrice"].ToString()
                    })">@i</a>
                </li>
            }
        </ul>
    </nav>
</div>



