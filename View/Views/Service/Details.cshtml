@model Domain.Models.Service

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Service</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Id)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Id)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Price)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Price)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Unit)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Unit)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Image)
        </dt>
        <dd class="col-sm-9">
            @if (!string.IsNullOrEmpty(Model.Image))
            {
                var extension = System.IO.Path.GetExtension(Model.Image);
                if (new[] { ".jpg", ".jpeg", ".png", ".gif" }.Contains(extension.ToLower()))
                {
                    <div style="width: 200px; height: 200px; overflow: hidden;">
                        <img src="~/images/service/@Model.Image" alt="@Model.Name" style="object-fit: cover; width: 100%; height: 100%;">
                    </div>
                }
                else
                {
                    <span>Invalid Image Format</span>
                }
            }
            else
            {
                <span>No Image Available</span>
            }
        </dd>

        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ServiceTypeId)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ServiceTypeId)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Status)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Status)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.CreatedTime)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.CreatedTime)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.CreatedBy)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.CreatedBy)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ModifiedTime)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ModifiedTime)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ModifiedBy)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ModifiedBy)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Deleted)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Deleted)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.DeletedBy)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.DeletedBy)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.DeletedTime)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.DeletedTime)
        </dd>
    </dl>
</div>
<div>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    <a asp-action="Index">Back to List</a>
</div>
