@using Domain.Models
@using View.Views.Shared.Helper
@model Domain.Models.Service

@{
    ViewData["Title"] = "Details";
}

<h1>Chi tiết dịch vụ</h1>

<div>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Id)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Id)
        </dd>
        <dt class = "col-sm-2">
            Tên
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            Mô tả
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class = "col-sm-2">
            Giá tiền
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Price)
        </dd>
        <dt class = "col-sm-2">
            Đơn vị
        </dt>
        <dd class = "col-sm-10">
            @((Model.Unit != null)
                ? UnitHelper.DisplayUnit(Model.Unit.Value)
                : "Unknown")
        </dd>
        <dt class="col-sm-2">
            Hình ảnh
        </dt>
        <dd class="col-sm-9">
            @if (!string.IsNullOrEmpty(Model.Image))
            {
                var extension = System.IO.Path.GetExtension(Model.Image);
                if (new[] { ".jpg", ".jpeg", ".png", ".gif" }.Contains(extension.ToLower()))
                {
                    <div style="width: 200px; height: 200px; overflow: hidden;">
                        <img src="~/images/service/@Model.Image" alt="@Model.Name" style="object-fit: cover; width: 100%; height: 100%;">
                    </div>
                }
                else
                {
                    <span>Invalid Image Format</span>
                }
            }
            else
            {
                <span>No Image Available</span>
            }
        </dd>

        <dt class = "col-sm-2">
            Loại dịch vụ
        </dt>
        <dd class = "col-sm-10">
            @{
                var types = ViewBag.ServiceTypeList as List<ServiceType>;
                var type = types?.FirstOrDefault(t => t.Id == Model.ServiceTypeId);
            }
            @type.Name
        </dd>
        <dt class = "col-sm-2">
            Trạng thái
        </dt>
        <dd class = "col-sm-10">
            @StatusHelper.DisplayStatusBadge(Model.Status)
        </dd>
        <dt class = "col-sm-2">
            Thời gian tạo
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.CreatedTime)
        </dd>
        <dt class = "col-sm-2">
            Tạo bởi
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.CreatedBy)
        </dd>
        <dt class = "col-sm-2">
            Thời gian sửa
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ModifiedTime)
        </dd>
        <dt class = "col-sm-2">
            Sửa bởi
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ModifiedBy)
        </dd>
        <dt class = "col-sm-2">
            Đã xóa
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Deleted)
        </dd>
        <dt class = "col-sm-2">
            Xóa bởi
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.DeletedBy)
        </dd>
        <dt class = "col-sm-2">
            Thời gian xóa
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.DeletedTime)
        </dd>
    </dl>
</div>
<div>
    @Html.ActionLink("Chỉnh sửa", "Edit", new { id = Model.Id }) |
    <a asp-action="Index">Quay lại</a>
</div>
