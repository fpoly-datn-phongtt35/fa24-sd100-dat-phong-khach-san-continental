@using Domain.DTO.Paging
@model ResponseData<Domain.Models.Voucher>

@{
    ViewData["Title"] = "Index";
}

<form method="get" action="@Url.Action("Index", new { pageIndex = Model.CurrentPage, pageSize = Model.PageSize })">
    <div class="input-group mb-3 w-100">
        <select name="discountType" id="discountType" class="form-select me-2" style="max-width: 200px;">
            <option value="">-- Discount type --</option>
            @foreach (var discountType in ViewBag.DiscountTypies)
            {
                <option value="@((int)discountType)"
                        selected="@(Context.Request.Query["discountType"].ToString() == ((int)discountType).ToString())">
                    @discountType
                </option>
            }
        </select>

        <button class="btn btn-secondary ms-2" type="submit">Lọc</button>
        <button type="submit" class="btn btn-danger ms-2" onclick="clearFilters()">Xóa bộ lọc</button>
    </div>
</form>

<script>
    function clearFilters() {
        document.getElementById('discountType').selectedIndex = 0;
    }
</script>

<style>
    body {
        color: white;
    }

    .table th, .table td {
        color: white;
    }

    h1 {
        color: white;
    }
</style>
<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.data.First().Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.data.First().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.data.First().Description)
            </th>
            <th>
                Type
            </th>
            <th>
                @Html.DisplayNameFor(model => model.data.First().CreatedTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.data.First().CreatedTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.data.First().Status)
            </th>
            
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.data) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DiscountType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DiscountValue)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
           
            <td>
                @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
}
    </tbody>
</table>
<div>
    <nav>
        <ul class="pagination">
            @for (var i = 1; i <= Model.totalPage; i++)
            {
                <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new {
                        pageIndex = i,
                        pageSize = Model.PageSize,
                        status = Context.Request.Query["discountType"].ToString()
                    })">@i</a>
                </li>
            }
        </ul>
    </nav>
</div>